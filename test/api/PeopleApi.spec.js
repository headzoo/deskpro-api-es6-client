/**
 * DeskPRO API
 * DeskPRO API
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DeskProApi);
  }
}(this, function(expect, DeskProApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DeskProApi.PeopleApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PeopleApi', function() {
    describe('deletePeopleById', function() {
      it('should call deletePeopleById successfully', function(done) {
        //uncomment below and update the code to test deletePeopleById
        //instance.deletePeopleById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePeopleByParentIdNoteById', function() {
      it('should call deletePeopleByParentIdNoteById successfully', function(done) {
        //uncomment below and update the code to test deletePeopleByParentIdNoteById
        //instance.deletePeopleByParentIdNoteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePersonCustomFieldById', function() {
      it('should call deletePersonCustomFieldById successfully', function(done) {
        //uncomment below and update the code to test deletePersonCustomFieldById
        //instance.deletePersonCustomFieldById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeople', function() {
      it('should call getPeople successfully', function(done) {
        //uncomment below and update the code to test getPeople
        //instance.getPeople(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleById', function() {
      it('should call getPeopleById successfully', function(done) {
        //uncomment below and update the code to test getPeopleById
        //instance.getPeopleById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleByIdTicket', function() {
      it('should call getPeopleByIdTicket successfully', function(done) {
        //uncomment below and update the code to test getPeopleByIdTicket
        //instance.getPeopleByIdTicket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleByParentIdContactData', function() {
      it('should call getPeopleByParentIdContactData successfully', function(done) {
        //uncomment below and update the code to test getPeopleByParentIdContactData
        //instance.getPeopleByParentIdContactData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleByParentIdContactDataById', function() {
      it('should call getPeopleByParentIdContactDataById successfully', function(done) {
        //uncomment below and update the code to test getPeopleByParentIdContactDataById
        //instance.getPeopleByParentIdContactDataById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleByParentIdContactDataCount', function() {
      it('should call getPeopleByParentIdContactDataCount successfully', function(done) {
        //uncomment below and update the code to test getPeopleByParentIdContactDataCount
        //instance.getPeopleByParentIdContactDataCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleByParentIdNote', function() {
      it('should call getPeopleByParentIdNote successfully', function(done) {
        //uncomment below and update the code to test getPeopleByParentIdNote
        //instance.getPeopleByParentIdNote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleByParentIdNoteById', function() {
      it('should call getPeopleByParentIdNoteById successfully', function(done) {
        //uncomment below and update the code to test getPeopleByParentIdNoteById
        //instance.getPeopleByParentIdNoteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleByParentIdNoteCount', function() {
      it('should call getPeopleByParentIdNoteCount successfully', function(done) {
        //uncomment below and update the code to test getPeopleByParentIdNoteCount
        //instance.getPeopleByParentIdNoteCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleCount', function() {
      it('should call getPeopleCount successfully', function(done) {
        //uncomment below and update the code to test getPeopleCount
        //instance.getPeopleCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleOnboardingNew', function() {
      it('should call getPeopleOnboardingNew successfully', function(done) {
        //uncomment below and update the code to test getPeopleOnboardingNew
        //instance.getPeopleOnboardingNew(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeopleOnboardingPending', function() {
      it('should call getPeopleOnboardingPending successfully', function(done) {
        //uncomment below and update the code to test getPeopleOnboardingPending
        //instance.getPeopleOnboardingPending(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonCustomFieldById', function() {
      it('should call getPersonCustomFieldById successfully', function(done) {
        //uncomment below and update the code to test getPersonCustomFieldById
        //instance.getPersonCustomFieldById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonCustomFields', function() {
      it('should call getPersonCustomFields successfully', function(done) {
        //uncomment below and update the code to test getPersonCustomFields
        //instance.getPersonCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePeopleByIdPermission', function() {
      it('should call updatePeopleByIdPermission successfully', function(done) {
        //uncomment below and update the code to test updatePeopleByIdPermission
        //instance.updatePeopleByIdPermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
