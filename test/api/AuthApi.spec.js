/**
 * DeskPRO API
 * DeskPRO API
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DeskProApi);
  }
}(this, function(expect, DeskProApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DeskProApi.AuthApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthApi', function() {
    describe('deleteOauthClientById', function() {
      it('should call deleteOauthClientById successfully', function(done) {
        //uncomment below and update the code to test deleteOauthClientById
        //instance.deleteOauthClientById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiTokenDeviceSetupByAuth', function() {
      it('should call getApiTokenDeviceSetupByAuth successfully', function(done) {
        //uncomment below and update the code to test getApiTokenDeviceSetupByAuth
        //instance.getApiTokenDeviceSetupByAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiTokenSession', function() {
      it('should call getApiTokenSession successfully', function(done) {
        //uncomment below and update the code to test getApiTokenSession
        //instance.getApiTokenSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiTokenUserSourceByUsersourceCallbackByFormat', function() {
      it('should call getApiTokenUserSourceByUsersourceCallbackByFormat successfully', function(done) {
        //uncomment below and update the code to test getApiTokenUserSourceByUsersourceCallbackByFormat
        //instance.getApiTokenUserSourceByUsersourceCallbackByFormat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiTokenUserSourceByUsersourceLogin', function() {
      it('should call getApiTokenUserSourceByUsersourceLogin successfully', function(done) {
        //uncomment below and update the code to test getApiTokenUserSourceByUsersourceLogin
        //instance.getApiTokenUserSourceByUsersourceLogin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiTokenUserSourceContextFormat', function() {
      it('should call getApiTokenUserSourceContextFormat successfully', function(done) {
        //uncomment below and update the code to test getApiTokenUserSourceContextFormat
        //instance.getApiTokenUserSourceContextFormat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMe', function() {
      it('should call getMe successfully', function(done) {
        //uncomment below and update the code to test getMe
        //instance.getMe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeDeviceSetupToken', function() {
      it('should call getMeDeviceSetupToken successfully', function(done) {
        //uncomment below and update the code to test getMeDeviceSetupToken
        //instance.getMeDeviceSetupToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMeProfile', function() {
      it('should call getMeProfile successfully', function(done) {
        //uncomment below and update the code to test getMeProfile
        //instance.getMeProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOauthClientById', function() {
      it('should call getOauthClientById successfully', function(done) {
        //uncomment below and update the code to test getOauthClientById
        //instance.getOauthClientById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOauthClientCount', function() {
      it('should call getOauthClientCount successfully', function(done) {
        //uncomment below and update the code to test getOauthClientCount
        //instance.getOauthClientCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOauthClients', function() {
      it('should call getOauthClients successfully', function(done) {
        //uncomment below and update the code to test getOauthClients
        //instance.getOauthClients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setApiTokenUserSourceByUsersourceCallbackByFormat', function() {
      it('should call setApiTokenUserSourceByUsersourceCallbackByFormat successfully', function(done) {
        //uncomment below and update the code to test setApiTokenUserSourceByUsersourceCallbackByFormat
        //instance.setApiTokenUserSourceByUsersourceCallbackByFormat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
