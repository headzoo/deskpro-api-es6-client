/**
 * DeskPRO API
 * DeskPRO API
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DeskProApi);
  }
}(this, function(expect, DeskProApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DeskProApi.OrganizationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationsApi', function() {
    describe('deleteOrganizationById', function() {
      it('should call deleteOrganizationById successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationById
        //instance.deleteOrganizationById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationByParentIdMemberByPerson', function() {
      it('should call deleteOrganizationByParentIdMemberByPerson successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationByParentIdMemberByPerson
        //instance.deleteOrganizationByParentIdMemberByPerson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationByParentIdNoteById', function() {
      it('should call deleteOrganizationByParentIdNoteById successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationByParentIdNoteById
        //instance.deleteOrganizationByParentIdNoteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganizationCustomFieldById', function() {
      it('should call deleteOrganizationCustomFieldById successfully', function(done) {
        //uncomment below and update the code to test deleteOrganizationCustomFieldById
        //instance.deleteOrganizationCustomFieldById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationById', function() {
      it('should call getOrganizationById successfully', function(done) {
        //uncomment below and update the code to test getOrganizationById
        //instance.getOrganizationById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationByIdTicket', function() {
      it('should call getOrganizationByIdTicket successfully', function(done) {
        //uncomment below and update the code to test getOrganizationByIdTicket
        //instance.getOrganizationByIdTicket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationByParentIdContactData', function() {
      it('should call getOrganizationByParentIdContactData successfully', function(done) {
        //uncomment below and update the code to test getOrganizationByParentIdContactData
        //instance.getOrganizationByParentIdContactData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationByParentIdContactDataById', function() {
      it('should call getOrganizationByParentIdContactDataById successfully', function(done) {
        //uncomment below and update the code to test getOrganizationByParentIdContactDataById
        //instance.getOrganizationByParentIdContactDataById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationByParentIdContactDataCount', function() {
      it('should call getOrganizationByParentIdContactDataCount successfully', function(done) {
        //uncomment below and update the code to test getOrganizationByParentIdContactDataCount
        //instance.getOrganizationByParentIdContactDataCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationByParentIdMember', function() {
      it('should call getOrganizationByParentIdMember successfully', function(done) {
        //uncomment below and update the code to test getOrganizationByParentIdMember
        //instance.getOrganizationByParentIdMember(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationByParentIdNote', function() {
      it('should call getOrganizationByParentIdNote successfully', function(done) {
        //uncomment below and update the code to test getOrganizationByParentIdNote
        //instance.getOrganizationByParentIdNote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationByParentIdNoteById', function() {
      it('should call getOrganizationByParentIdNoteById successfully', function(done) {
        //uncomment below and update the code to test getOrganizationByParentIdNoteById
        //instance.getOrganizationByParentIdNoteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationByParentIdNoteCount', function() {
      it('should call getOrganizationByParentIdNoteCount successfully', function(done) {
        //uncomment below and update the code to test getOrganizationByParentIdNoteCount
        //instance.getOrganizationByParentIdNoteCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationCount', function() {
      it('should call getOrganizationCount successfully', function(done) {
        //uncomment below and update the code to test getOrganizationCount
        //instance.getOrganizationCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationCustomFieldById', function() {
      it('should call getOrganizationCustomFieldById successfully', function(done) {
        //uncomment below and update the code to test getOrganizationCustomFieldById
        //instance.getOrganizationCustomFieldById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationCustomFields', function() {
      it('should call getOrganizationCustomFields successfully', function(done) {
        //uncomment below and update the code to test getOrganizationCustomFields
        //instance.getOrganizationCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizations', function() {
      it('should call getOrganizations successfully', function(done) {
        //uncomment below and update the code to test getOrganizations
        //instance.getOrganizations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
