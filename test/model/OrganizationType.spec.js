/**
 * DeskPRO API
 * DeskPRO API
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DeskProApi);
  }
}(this, function(expect, DeskProApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DeskProApi.OrganizationType();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationType', function() {
    it('should create an instance of OrganizationType', function() {
      // uncomment below and update the code to test OrganizationType
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be.a(DeskProApi.OrganizationType);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property parent (base name: "parent")', function() {
      // uncomment below and update the code to test the property parent
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property pictureBlob (base name: "picture_blob")', function() {
      // uncomment below and update the code to test the property pictureBlob
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property importance (base name: "importance")', function() {
      // uncomment below and update the code to test the property importance
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property userGroups (base name: "user_groups")', function() {
      // uncomment below and update the code to test the property userGroups
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property emailDomains (base name: "email_domains")', function() {
      // uncomment below and update the code to test the property emailDomains
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property contactData (base name: "contact_data")', function() {
      // uncomment below and update the code to test the property contactData
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

    it('should have the property members (base name: "members")', function() {
      // uncomment below and update the code to test the property members
      //var instane = new DeskProApi.OrganizationType();
      //expect(instance).to.be();
    });

  });

}));
